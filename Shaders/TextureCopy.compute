cbuffer CopyData : register(b0)
{
    uint2 _StartPos;
    uint2 _Count;
};
StructuredBuffer<uint> _RGBA32InputBuffer : register(t0);
StructuredBuffer<uint2> _RGBA64InputBuffer : register(t1);
StructuredBuffer<float4> _RGBAFloatInputBuffer : register(t2);
RWTexture2DArray<float4> _MainTex : register(u0);
[numthreads(8, 8, 1)]
void CopyToRGBA32(uint2 id : SV_DISPATCHTHREADID)
{
    if(id.x >= _Count.x || id.y >= _Count.y)
        return;
    uint2 pos = id + _StartPos;
    uint value = _RGBA32InputBuffer[id.y * _Count.x + id.x];
    float a = (float)(value & 255) / 255.0;
    value >>= 8;
    float b = (float)(value & 255) / 255.0;
    value >>= 8;
    float g = (float)(value & 255) / 255.0;
    value >>= 8;
    float r = (float)(value & 255) / 255.0;
    _MainTex[uint3(pos, 0)] = float4(r,g,b,a);
}

[numthreads(8,8,1)]
void CopyToRGBA64(uint2 id : SV_DISPATCHTHREADID)
{
     if(id.x >= _Count.x || id.y >= _Count.y)
        return;
    uint2 pos = id + _StartPos;
    uint2 value = _RGBA64InputBuffer[id.y * _Count.x + id.x];
    float a = (float)(value.y & 65535) / 65535.0;
    value.y >>= 16;
    float b = (float)(value.y & 65535) / 65535.0;
    float g = (float)(value.x & 65535) / 65535.0;
    value.x >>= 16;
    float r = (float)(value.x & 65535) / 65535.0;
    _MainTex[uint3(pos, 0)] = float4(r  ,g,b,a);
}

[numthreads(8,8,1)]
void CopyToRGBAFloat(uint2 id : SV_DISPATCHTHREADID)
{
    if(id.x >= _Count.x || id.y >= _Count.y)
        return;
    uint2 pos = id + _StartPos; 
    _MainTex[uint3(pos, 0)] = _RGBAFloatInputBuffer[id.y * _Count.x + id.x];
}